---
- name: Provision VM
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: Create user var
      ansible.builtin.set_fact:
        home_user: "{{ lookup('env', 'HOME') }}"

    - name: Replace a localhost entry with our own | {{ inventory_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: 127.0.0.1 localhost
        owner: root
        group: root
        mode: '0644'
    - name: Allow password authentication |{{ inventory_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication yes"
        state: present
      notify: Restart sshd
    - name: Set authorized key took from file | {{ inventory_hostname }}
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', '{{ home_user }}/.ssh/id_rsa.pub') }}"
    - name: Add IP address of all hosts to all hosts | {{ inventory_hostname }}
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{ item }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
    - name: Copy SSH key
      ansible.builtin.copy:
        src: ~/.ssh/id_rsa
        dest: /home/vagrant/.ssh/id_rsa
        mode: 0600
        owner: vagrant
        group: vagrant
    - name: Copy SSH config
      ansible.builtin.copy:
        src: files/ssh-config
        dest: /home/vagrant/.ssh/config
        mode: 0600
        owner: vagrant
        group: vagrant
  handlers:
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

- name: Add soft on kubernetes VM
  hosts: kubernetes
  gather_facts: true
  become: true

  tasks:
    - name: Add Docker GPG key  | {{ inventory_hostname }}
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
    - name: Add Kubernetes GPG key | {{ inventory_hostname }}
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add Docker repository | {{ inventory_hostname }}
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
        state: present
        update_cache: false
    - name: Add Kubernetes repository | {{ inventory_hostname }}
      ansible.builtin.apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        update_cache: true
    - name: Install packages | {{ inventory_hostname }}
      ansible.builtin.package:
        name:
          - docker-ce={{ docker_version }}
          - docker-ce-cli={{ docker_version }}
          - kubelet={{ kube_version }}
          - kubeadm={{ kube_version }}
          - kubectl={{ kubectl_version }}
        state: present
    - name: Hold version | {{ inventory_hostname }}
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubeadm
        - kubelet
        - docker-ce
        - kubecetl
    - name: Add vagrant to group Docker | {{ inventory_hostname }}
      ansible.builtin.user:
        name: vagrant
        group: docker
    - name: Update Docker config | {{ inventory_hostname }}
      ansible.builtin.copy:
        src: files/daemon.json
        dest: /etc/docker/daemon.json
        mode: 0644
      notify: Restart docker
    - name: Check swap State
      ansible.builtin.stat:
        path: /swapfile
      register: swap_file_check
    - name: Umount swap | {{ inventory_hostname }}
      ansible.posix.mount:
        name: swap
        fstype: swap
        state: absent
      when: swap_file_check.stat.exists
    - name: Delete Container default config
      ansible.builtin.file:
        path: /etc/containerd/config.toml
        state: absent
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
    - name: Swap Off | {{ inventory_hostname }}
      ansible.builtin.shell:
        cmd: swapoff -a
      when: ansible_swaptotal_mb > 0

  handlers:
    - name: Restart docker
      ansible.builtin.service:
        name: docker
        state: restarted

- name: Install soft on controller
  hosts: controller
  gather_facts: true
  become: true

  tasks:
    - name: Add Kubernetes GPG key | {{ inventory_hostname }}
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add Kubernetes repository | {{ inventory_hostname }}
      ansible.builtin.apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
    - name: Install packages | {{ inventory_hostname }}
      ansible.builtin.package:
        name:
          - kubectl
          - haproxy
        state: present
    - name: Add haproxy config | {{ inventory_hostname }}
      vars:
        masters: "{{ groups['masters'] }}"
        workers: "{{ groups['workers'] }}"
      ansible.builtin.template:
        src: files/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: 0644
    - name: Start haproxy | {{ inventory_hostname }}
      ansible.builtin.service:
        name: haproxy
        enabled: true
        state: restarted
    - name: Create folder .kube
      ansible.builtin.file:
        dest: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: 0700
